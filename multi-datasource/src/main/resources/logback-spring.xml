<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <contextName>chansey</contextName>
    <property name="LOG_PATH" value="logs" />

    <logger name="org.springframework" level="ERROR" />
    <logger name="com.lyj.multidatasource" level="INFO" />
    <logger name="com.lyj.multidatasource.mapper" level="DEBUG" />   <!-- 屏蔽 Mybatis 日志 -->

    <!-- 日志记录器，日期滚动记录 -->
    <appender name="APPLOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文件的路径及文件名 -->
        <file>${LOG_PATH}/app.log</file>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/app.log.%d{yyyy-MM-dd-HH}</fileNamePattern>
            <maxHistory>1000</maxHistory>
        </rollingPolicy>
        <!-- 追加方式记录日志 -->
        <append>true</append>
        <!-- 日志文件的格式 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>[%X{traceId}] %d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger:%-4L - %msg%n</pattern>
            <charset>utf-8</charset>
        </encoder>
    </appender>

    <appender name="PerformanceLogAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${LOG_PATH}/perform.log</File>
        <append>true</append>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/perform.log.%d{yyyy-MM-dd-HH}</fileNamePattern>
            <maxHistory>48</maxHistory>
        </rollingPolicy>
        <!-- 日志文件的格式 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>[%X{traceId}] %d{yyyy-MM-dd HH:mm:ss.SSS} - %msg%n</pattern>
            <charset>utf-8</charset>
        </encoder>
    </appender>


    <appender name="HiveLogAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${LOG_PATH}/hive.log</File>
        <append>true</append>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/hive.log.%d{yyyy-MM-dd-HH}</fileNamePattern>
            <maxHistory>1000</maxHistory>
        </rollingPolicy>
        <!-- 日志文件的格式 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>[%X{traceId}] %d{yyyy-MM-dd HH:mm:ss.SSS} - %msg%n</pattern>
            <charset>utf-8</charset>
        </encoder>
    </appender>

    <!-- 彩色日志 -->
    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />
    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr([%15.15t]){faint} %clr(%-31.31logger{30}){cyan} %clr(:%-4L){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}" />
    <!-- Console 输出设置 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <logger name="PerformanceLog" additivity="false" level="INFO">
        <appender-ref ref="PerformanceLogAppender"/>
    </logger>

    <logger name="HiveLog" additivity="false" level="INFO">
        <appender-ref ref="HiveLogAppender"/>
    </logger>

    <root level="INFO">
        <!-- 生产环境中不需要console日志 -->
         <appender-ref ref="STDOUT" />
<!--        <appender-ref ref="APPLOG" />-->
    </root>

</configuration>
